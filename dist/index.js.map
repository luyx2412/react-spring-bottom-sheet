{"version":3,"file":"index.js","sources":["../src/hooks/useLayoutEffect.tsx","../src/utils.ts","../src/hooks/useSnapPoints.tsx","../src/machines/overlay.ts","../src/BottomSheet.tsx","../src/hooks/useReady.tsx","../src/hooks/useReducedMotion.tsx","../src/hooks/useSpring.tsx","../src/hooks/useScrollLock.tsx","../src/hooks/useAriaHider.tsx","../src/hooks/useFocusTrap.tsx","../src/hooks/useSpringInterpolations.tsx","../src/index.tsx"],"sourcesContent":["import { useEffect, useLayoutEffect as useLayoutEffectSafely } from 'react'\n\n// Ensure the name used in components is useLayoutEffect so the eslint react hooks plugin works\nexport const useLayoutEffect =\n  typeof window !== 'undefined' ? useLayoutEffectSafely : useEffect\n","/* eslint-disable no-self-compare */\n\n// stolen from lodash\nexport function clamp(number: number, lower: number, upper: number) {\n  number = +number\n  lower = +lower\n  upper = +upper\n  lower = lower === lower ? lower : 0\n  upper = upper === upper ? upper : 0\n  if (number === number) {\n    number = number <= upper ? number : upper\n    number = number >= lower ? number : lower\n  }\n  return number\n}\n\n// Mwahaha easiest way to filter out NaN I ever saw! >:3\nexport function deleteNaN(arr) {\n  const set = new Set(arr)\n  set.delete(NaN)\n  return [...set]\n}\n\nexport function roundAndCheckForNaN(unrounded) {\n  const rounded = Math.round(unrounded)\n  if (Number.isNaN(unrounded)) {\n    throw new TypeError(\n      'Found a NaN! Check your snapPoints / defaultSnap / snapTo '\n    )\n  }\n\n  return rounded\n}\n\n// Validate, sanitize, round and dedupe snap points, as well as extracting the minSnap and maxSnap points\nexport function processSnapPoints(unsafeSnaps: number | number[], maxHeight) {\n  const safeSnaps = [].concat(unsafeSnaps).map(roundAndCheckForNaN)\n\n  const snapPointsDedupedSet = safeSnaps.reduce((acc, snapPoint) => {\n    acc.add(clamp(snapPoint, 0, maxHeight))\n    return acc\n  }, new Set<number>())\n\n  const snapPoints = Array.from(snapPointsDedupedSet)\n\n  const minSnap = Math.min(...snapPoints)\n  if (Number.isNaN(minSnap)) {\n    throw new TypeError('minSnap is NaN')\n  }\n  const maxSnap = Math.max(...snapPoints)\n  if (Number.isNaN(maxSnap)) {\n    throw new TypeError('maxSnap is NaN')\n  }\n\n  return {\n    snapPoints,\n    minSnap,\n    maxSnap,\n  }\n}\n\nexport const debugging =\n  process.env.NODE_ENV === 'development' && typeof window !== 'undefined'\n    ? window.location.search === '?debug'\n    : false\n","import React, {\n  useCallback,\n  useDebugValue,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { ResizeObserver, ResizeObserverEntry } from '@juggle/resize-observer'\nimport type { defaultSnapProps, ResizeSource, snapPoints } from '../types'\nimport { processSnapPoints, roundAndCheckForNaN } from '../utils'\nimport { useReady } from './useReady'\nimport { ResizeObserverOptions } from '@juggle/resize-observer/lib/ResizeObserverOptions'\nimport { useLayoutEffect } from './useLayoutEffect'\n\nexport function useSnapPoints({\n  contentRef,\n  controlledMaxHeight,\n  footerEnabled,\n  footerRef,\n  getSnapPoints,\n  headerEnabled,\n  headerRef,\n  heightRef,\n  lastSnapRef,\n  ready,\n  registerReady,\n  resizeSourceRef,\n}: {\n  contentRef: React.RefObject<Element>\n  controlledMaxHeight?: number\n  footerEnabled: boolean\n  footerRef: React.RefObject<Element>\n  getSnapPoints: snapPoints\n  headerEnabled: boolean\n  headerRef: React.RefObject<Element>\n  heightRef: React.RefObject<number>\n  lastSnapRef: React.RefObject<number>\n  ready: boolean\n  registerReady: ReturnType<typeof useReady>['registerReady']\n  resizeSourceRef: React.MutableRefObject<ResizeSource>\n}) {\n  const { maxHeight, minHeight, headerHeight, footerHeight } = useDimensions({\n    contentRef: contentRef,\n    controlledMaxHeight,\n    footerEnabled,\n    footerRef,\n    headerEnabled,\n    headerRef,\n    registerReady,\n    resizeSourceRef,\n  })\n\n  const { snapPoints, minSnap, maxSnap } = processSnapPoints(\n    ready\n      ? getSnapPoints({\n          height: heightRef.current,\n          footerHeight,\n          headerHeight,\n          minHeight,\n          maxHeight,\n        })\n      : [0],\n    maxHeight\n  )\n  //console.log({ snapPoints, minSnap, maxSnap })\n\n  // @TODO investigate the gains from memoizing this\n  function findSnap(\n    numberOrCallback: number | ((state: defaultSnapProps) => number)\n  ) {\n    let unsafeSearch: number\n    if (typeof numberOrCallback === 'function') {\n      unsafeSearch = numberOrCallback({\n        footerHeight,\n        headerHeight,\n        height: heightRef.current,\n        minHeight,\n        maxHeight,\n        snapPoints,\n        lastSnap: lastSnapRef.current,\n      })\n    } else {\n      unsafeSearch = numberOrCallback\n    }\n    const querySnap = roundAndCheckForNaN(unsafeSearch)\n    return snapPoints.reduce(\n      (prev, curr) =>\n        Math.abs(curr - querySnap) < Math.abs(prev - querySnap) ? curr : prev,\n      minSnap\n    )\n  }\n\n  useDebugValue(`minSnap: ${minSnap}, maxSnap:${maxSnap}`)\n\n  return { minSnap, maxSnap, findSnap, maxHeight }\n}\n\nfunction useDimensions({\n  contentRef,\n  controlledMaxHeight,\n  footerEnabled,\n  footerRef,\n  headerEnabled,\n  headerRef,\n  registerReady,\n  resizeSourceRef,\n}: {\n  contentRef: React.RefObject<Element>\n  controlledMaxHeight?: number\n  footerEnabled: boolean\n  footerRef: React.RefObject<Element>\n  headerEnabled: boolean\n  headerRef: React.RefObject<Element>\n  registerReady: ReturnType<typeof useReady>['registerReady']\n  resizeSourceRef: React.MutableRefObject<ResizeSource>\n}) {\n  const setReady = useMemo(() => registerReady('contentHeight'), [\n    registerReady,\n  ])\n  const maxHeight = useMaxHeight(\n    controlledMaxHeight,\n    registerReady,\n    resizeSourceRef\n  )\n\n  // @TODO probably better to forward props instead of checking refs to decide if it's enabled\n  const headerHeight = useElementSizeObserver(headerRef, {\n    label: 'headerHeight',\n    enabled: headerEnabled,\n    resizeSourceRef,\n  })\n  const contentHeight = useElementSizeObserver(contentRef, {\n    label: 'contentHeight',\n    enabled: true,\n    resizeSourceRef,\n  })\n  const footerHeight = useElementSizeObserver(footerRef, {\n    label: 'footerHeight',\n    enabled: footerEnabled,\n    resizeSourceRef,\n  })\n  const minHeight =\n    Math.min(maxHeight - headerHeight - footerHeight, contentHeight) +\n    headerHeight +\n    footerHeight\n\n  useDebugValue(`minHeight: ${minHeight}`)\n\n  const ready = contentHeight > 0\n  useEffect(() => {\n    if (ready) {\n      setReady()\n    }\n  }, [ready, setReady])\n\n  return {\n    maxHeight,\n    minHeight,\n    headerHeight,\n    footerHeight,\n  }\n}\n\nconst observerOptions: ResizeObserverOptions = {\n  // Respond to changes to padding, happens often on iOS when using env(safe-area-inset-bottom)\n  // And the user hides or shows the Safari browser toolbar\n  box: 'border-box',\n}\n/**\n * Hook for determining the size of an element using the Resize Observer API.\n *\n * @param ref - A React ref to an element\n */\nfunction useElementSizeObserver(\n  ref: React.RefObject<Element>,\n  {\n    label,\n    enabled,\n    resizeSourceRef,\n  }: {\n    label: string\n    enabled: boolean\n    resizeSourceRef: React.MutableRefObject<ResizeSource>\n  }\n): number {\n  let [size, setSize] = useState(0)\n\n  useDebugValue(`${label}: ${size}`)\n\n  const handleResize = useCallback(\n    (entries: ResizeObserverEntry[]) => {\n      // we only observe one element, so accessing the first entry here is fine\n      setSize(entries[0].borderBoxSize[0].blockSize)\n      resizeSourceRef.current = 'element'\n    },\n    [resizeSourceRef]\n  )\n\n  useLayoutEffect(() => {\n    if (!ref.current || !enabled) {\n      return\n    }\n\n    const resizeObserver = new ResizeObserver(handleResize)\n    resizeObserver.observe(ref.current, observerOptions)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [ref, handleResize, enabled])\n\n  return enabled ? size : 0\n}\n\n// Blazingly keep track of the current viewport height without blocking the thread, keeping that sweet 60fps on smartphones\nfunction useMaxHeight(\n  controlledMaxHeight,\n  registerReady: ReturnType<typeof useReady>['registerReady'],\n  resizeSourceRef: React.MutableRefObject<ResizeSource>\n) {\n  const setReady = useMemo(() => registerReady('maxHeight'), [registerReady])\n  const [maxHeight, setMaxHeight] = useState(() =>\n    roundAndCheckForNaN(controlledMaxHeight) || typeof window !== 'undefined'\n      ? window.innerHeight\n      : 0\n  )\n  const ready = maxHeight > 0\n  const raf = useRef(0)\n\n  useDebugValue(controlledMaxHeight ? 'controlled' : 'auto')\n\n  useEffect(() => {\n    if (ready) {\n      setReady()\n    }\n  }, [ready, setReady])\n\n  useLayoutEffect(() => {\n    // Bail if the max height is a controlled prop\n    if (controlledMaxHeight) {\n      setMaxHeight(roundAndCheckForNaN(controlledMaxHeight))\n      resizeSourceRef.current = 'maxheightprop'\n\n      return\n    }\n\n    const handleResize = () => {\n      if (raf.current) {\n        // bail to throttle the amount of resize changes\n        return\n      }\n\n      // throttle state changes using rAF\n      raf.current = requestAnimationFrame(() => {\n        setMaxHeight(window.innerHeight)\n        resizeSourceRef.current = 'window'\n\n        raf.current = 0\n      })\n    }\n    window.addEventListener('resize', handleResize)\n    setMaxHeight(window.innerHeight)\n    resizeSourceRef.current = 'window'\n    setReady()\n\n    return () => {\n      window.removeEventListener('resize', handleResize)\n      cancelAnimationFrame(raf.current)\n    }\n  }, [controlledMaxHeight, setReady, resizeSourceRef])\n\n  return maxHeight\n}\n","import { Machine, assign } from 'xstate'\n\n// This is the root machine, composing all the other machines and is the brain of the bottom sheet\n\ninterface OverlayStateSchema {\n  states: {\n    // the overlay usually starts in the closed position\n    closed: {}\n    opening: {\n      states: {\n        // Used to fire off the springStart event\n        start: {}\n        // Decide how to transition to the open state based on what the initialState is\n        transition: {}\n        // Fast enter animation, sheet is open by default\n        immediately: {\n          states: {\n            open: {}\n            activating: {}\n          }\n        }\n        smoothly: {\n          states: {\n            // This state only happens when the overlay should start in an open state, instead of animating from the bottom\n            // openImmediately: {}\n            // visuallyHidden will render the overlay in the open state, but with opacity 0\n            // doing this solves two problems:\n            // on Android focusing an input element will trigger the softkeyboard to show up, which will change the viewport height\n            // on iOS the focus event will break the view by triggering a scrollIntoView event if focus happens while the overlay is below the viewport and body got overflow:hidden\n            // by rendering things with opacity 0 we ensure keyboards and scrollIntoView all happen in a way that match up with what the sheet will look like.\n            // we can then move it to the opening position below the viewport, and animate it into view without worrying about height changes or scrolling overflow:hidden events\n            visuallyHidden: {}\n            // In this state we're activating focus traps, scroll locks and more, this will sometimes trigger soft keyboards and scrollIntoView\n            // @TODO we might want to add a delay here before proceeding to open, to give android and iOS enough time to adjust the viewport when focusing an interactive element\n            activating: {}\n            // Animates from the bottom\n            open: {}\n          }\n        }\n        // Used to fire off the springEnd event\n        end: {}\n        // And finally we're ready to transition to open\n        done: {}\n      }\n    }\n    open: {}\n    // dragging responds to user gestures, which may interrupt the opening state, closing state or snapping\n    // when interrupting an opening event, it fires onSpringEnd(OPEN) before onSpringStart(DRAG)\n    // when interrupting a closing event, it fires onSpringCancel(CLOSE) before onSpringStart(DRAG)\n    // when interrupting a dragging event, it fires onSpringCancel(SNAP) before onSpringStart(DRAG)\n    dragging: {}\n    // snapping happens whenever transitioning to a new snap point, often after dragging\n    snapping: {\n      states: {\n        start: {}\n        snappingSmoothly: {}\n        end: {}\n        done: {}\n      }\n    }\n    resizing: {\n      states: {\n        start: {}\n        resizingSmoothly: {}\n        end: {}\n        done: {}\n      }\n    }\n    closing: {\n      states: {\n        start: {}\n        deactivating: {}\n        closingSmoothly: {}\n        end: {}\n        done: {}\n      }\n    }\n  }\n}\n\ntype OverlayEvent =\n  | { type: 'OPEN' }\n  | {\n      type: 'SNAP'\n      payload: {\n        y: number\n        velocity: number\n        source: 'dragging' | 'custom' | string\n      }\n    }\n  | { type: 'CLOSE' }\n  | { type: 'DRAG' }\n  | { type: 'RESIZE' }\n\n// The context (extended state) of the machine\ninterface OverlayContext {\n  initialState: 'OPEN' | 'CLOSED'\n}\nfunction sleep(ms = 1000) {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nconst cancelOpen = {\n  CLOSE: { target: '#overlay.closing', actions: 'onOpenCancel' },\n}\nconst openToDrag = {\n  DRAG: { target: '#overlay.dragging', actions: 'onOpenEnd' },\n}\nconst openToResize = {\n  RESIZE: { target: '#overlay.resizing', actions: 'onOpenEnd' },\n}\n\nconst initiallyOpen = ({ initialState }) => initialState === 'OPEN'\nconst initiallyClosed = ({ initialState }) => initialState === 'CLOSED'\n\n// Copy paste the machine into https://xstate.js.org/viz/ to make sense of what's going on in here ;)\n\nexport const overlayMachine = Machine<\n  OverlayContext,\n  OverlayStateSchema,\n  OverlayEvent\n>(\n  {\n    id: 'overlay',\n    initial: 'closed',\n    context: { initialState: 'CLOSED' },\n    states: {\n      closed: { on: { OPEN: 'opening', CLOSE: undefined } },\n      opening: {\n        initial: 'start',\n        states: {\n          start: {\n            invoke: {\n              src: 'onOpenStart',\n              onDone: 'transition',\n            },\n          },\n          transition: {\n            always: [\n              { target: 'immediately', cond: 'initiallyOpen' },\n              { target: 'smoothly', cond: 'initiallyClosed' },\n            ],\n          },\n          immediately: {\n            initial: 'open',\n            states: {\n              open: {\n                invoke: { src: 'openImmediately', onDone: 'activating' },\n              },\n              activating: {\n                invoke: { src: 'activate', onDone: '#overlay.opening.end' },\n                on: { ...openToDrag, ...openToResize },\n              },\n            },\n          },\n          smoothly: {\n            initial: 'visuallyHidden',\n            states: {\n              visuallyHidden: {\n                invoke: { src: 'renderVisuallyHidden', onDone: 'activating' },\n              },\n              activating: {\n                invoke: { src: 'activate', onDone: 'open' },\n              },\n              open: {\n                invoke: { src: 'openSmoothly', onDone: '#overlay.opening.end' },\n                on: { ...openToDrag, ...openToResize },\n              },\n            },\n          },\n          end: {\n            invoke: { src: 'onOpenEnd', onDone: 'done' },\n            on: { CLOSE: '#overlay.closing', DRAG: '#overlay.dragging' },\n          },\n          done: {\n            type: 'final',\n          },\n        },\n        on: { ...cancelOpen },\n        onDone: 'open',\n      },\n      open: {\n        on: { DRAG: '#overlay.dragging', SNAP: 'snapping', RESIZE: 'resizing' },\n      },\n      dragging: {\n        on: { SNAP: 'snapping' },\n      },\n      snapping: {\n        initial: 'start',\n        states: {\n          start: {\n            invoke: {\n              src: 'onSnapStart',\n              onDone: 'snappingSmoothly',\n            },\n            entry: [\n              assign({\n                // @ts-expect-error\n                y: (_, { payload: { y } }) => y,\n                velocity: (_, { payload: { velocity } }) => velocity,\n                snapSource: (_, { payload: { source = 'custom' } }) => source,\n              }),\n            ],\n          },\n          snappingSmoothly: {\n            invoke: { src: 'snapSmoothly', onDone: 'end' },\n          },\n          end: {\n            invoke: { src: 'onSnapEnd', onDone: 'done' },\n            on: {\n              RESIZE: '#overlay.resizing',\n              SNAP: '#overlay.snapping',\n              CLOSE: '#overlay.closing',\n              DRAG: '#overlay.dragging',\n            },\n          },\n          done: { type: 'final' },\n        },\n        on: {\n          SNAP: { target: 'snapping', actions: 'onSnapEnd' },\n          RESIZE: { target: '#overlay.resizing', actions: 'onSnapCancel' },\n          DRAG: { target: '#overlay.dragging', actions: 'onSnapCancel' },\n          CLOSE: { target: '#overlay.closing', actions: 'onSnapCancel' },\n        },\n        onDone: 'open',\n      },\n      resizing: {\n        initial: 'start',\n        states: {\n          start: {\n            invoke: {\n              src: 'onResizeStart',\n              onDone: 'resizingSmoothly',\n            },\n          },\n          resizingSmoothly: {\n            invoke: { src: 'resizeSmoothly', onDone: 'end' },\n          },\n          end: {\n            invoke: { src: 'onResizeEnd', onDone: 'done' },\n            on: {\n              SNAP: '#overlay.snapping',\n              CLOSE: '#overlay.closing',\n              DRAG: '#overlay.dragging',\n            },\n          },\n          done: { type: 'final' },\n        },\n        on: {\n          RESIZE: { target: 'resizing', actions: 'onResizeEnd' },\n          SNAP: { target: 'snapping', actions: 'onResizeCancel' },\n          DRAG: { target: '#overlay.dragging', actions: 'onResizeCancel' },\n          CLOSE: { target: '#overlay.closing', actions: 'onResizeCancel' },\n        },\n        onDone: 'open',\n      },\n      closing: {\n        initial: 'start',\n        states: {\n          start: {\n            invoke: {\n              src: 'onCloseStart',\n              onDone: 'deactivating',\n            },\n            on: { OPEN: { target: '#overlay.open', actions: 'onCloseCancel' } },\n          },\n          deactivating: {\n            invoke: { src: 'deactivate', onDone: 'closingSmoothly' },\n          },\n          closingSmoothly: {\n            invoke: { src: 'closeSmoothly', onDone: 'end' },\n          },\n          end: {\n            invoke: { src: 'onCloseEnd', onDone: 'done' },\n            on: {\n              OPEN: { target: '#overlay.opening', actions: 'onCloseCancel' },\n            },\n          },\n          done: { type: 'final' },\n        },\n        on: {\n          CLOSE: undefined,\n          OPEN: { target: '#overlay.opening', actions: 'onCloseCancel' },\n        },\n        onDone: 'closed',\n      },\n    },\n    on: {\n      CLOSE: 'closing',\n    },\n  },\n  {\n    actions: {\n      onOpenCancel: (context, event) => {\n        console.log('onOpenCancel', { context, event })\n      },\n      onSnapCancel: (context, event) => {\n        console.log('onSnapCancel', { context, event })\n      },\n      onResizeCancel: (context, event) => {\n        console.log('onResizeCancel', { context, event })\n      },\n      onCloseCancel: (context, event) => {\n        console.log('onCloseCancel', { context, event })\n      },\n      onOpenEnd: (context, event) => {\n        console.log('onOpenCancel', { context, event })\n      },\n      onSnapEnd: (context, event) => {\n        console.log('onSnapEnd', { context, event })\n      },\n      onRezizeEnd: (context, event) => {\n        console.log('onRezizeEnd', { context, event })\n      },\n    },\n    services: {\n      onSnapStart: async () => {\n        await sleep()\n      },\n      onOpenStart: async () => {\n        await sleep()\n      },\n      onCloseStart: async () => {\n        await sleep()\n      },\n      onResizeStart: async () => {\n        await sleep()\n      },\n      onSnapEnd: async () => {\n        await sleep()\n      },\n      onOpenEnd: async () => {\n        await sleep()\n      },\n      onCloseEnd: async () => {\n        await sleep()\n      },\n      onResizeEnd: async () => {\n        await sleep()\n      },\n      renderVisuallyHidden: async (context, event) => {\n        console.group('renderVisuallyHidden')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      activate: async (context, event) => {\n        console.group('activate')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      deactivate: async (context, event) => {\n        console.group('deactivate')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      openSmoothly: async (context, event) => {\n        console.group('openSmoothly')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      openImmediately: async (context, event) => {\n        console.group('openImmediately')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      snapSmoothly: async (context, event) => {\n        console.group('snapSmoothly')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      resizeSmoothly: async (context, event) => {\n        console.group('resizeSmoothly')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n      closeSmoothly: async (context, event) => {\n        console.group('closeSmoothly')\n        console.log({ context, event })\n        await sleep()\n        console.groupEnd()\n      },\n    },\n    guards: { initiallyClosed, initiallyOpen },\n  }\n)\n","//\n// In order to greatly reduce complexity this component is designed to always transition to open on mount, and then\n// transition to a closed state later. This ensures that all memory used to keep track of animation and gesture state\n// can be reclaimed after the sheet is closed and then unmounted.\n// It also ensures that when transitioning to open on mount the state is always clean, not affected by previous states that could\n// cause race conditions.\n\nimport { useMachine } from '@xstate/react'\nimport React, {\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n} from 'react'\nimport { animated, config } from 'react-spring'\nimport { rubberbandIfOutOfBounds, useDrag } from 'react-use-gesture'\nimport {\n  useAriaHider,\n  useFocusTrap,\n  useLayoutEffect,\n  useReady,\n  useReducedMotion,\n  useScrollLock,\n  useSnapPoints,\n  useSpring,\n  useSpringInterpolations,\n} from './hooks'\nimport { overlayMachine } from './machines/overlay'\nimport type {\n  defaultSnapProps,\n  Props,\n  RefHandles,\n  ResizeSource,\n  SnapPointProps,\n} from './types'\nimport { debugging } from './utils'\n\nconst { tension, friction } = config.default\n\n// @TODO implement AbortController to deal with race conditions\n\n// @TODO rename to SpringBottomSheet and allow userland to import it directly, for those who want maximum control and minimal bundlesize\nexport const BottomSheet = React.forwardRef<\n  RefHandles,\n  {\n    initialState: 'OPEN' | 'CLOSED'\n    lastSnapRef: React.MutableRefObject<number | null>\n  } & Props\n>(function BottomSheetInternal(\n  {\n    children,\n    sibling,\n    className,\n    footer,\n    header,\n    open: _open,\n    initialState,\n    lastSnapRef,\n    initialFocusRef,\n    onDismiss,\n    maxHeight: controlledMaxHeight,\n    defaultSnap: getDefaultSnap = _defaultSnap,\n    snapPoints: getSnapPoints = _snapPoints,\n    blocking = true,\n    scrollLocking = true,\n    style,\n    onSpringStart,\n    onSpringCancel,\n    onSpringEnd,\n    reserveScrollBarGap = blocking,\n    expandOnContentDrag = false,\n    ...props\n  },\n  forwardRef\n) {\n  // Before any animations can start we need to measure a few things, like the viewport and the dimensions of content, and header + footer if they exist\n  // @TODO make ready its own state perhaps, before open or closed\n  const { ready, registerReady } = useReady()\n\n  // Controls the drag handler, used by spring operations that happen outside the render loop in React\n  const canDragRef = useRef(false)\n\n  // This way apps don't have to remember to wrap their callbacks in useCallback to avoid breaking the sheet\n  const onSpringStartRef = useRef(onSpringStart)\n  const onSpringCancelRef = useRef(onSpringCancel)\n  const onSpringEndRef = useRef(onSpringEnd)\n  useEffect(() => {\n    onSpringStartRef.current = onSpringStart\n    onSpringCancelRef.current = onSpringCancel\n    onSpringEndRef.current = onSpringEnd\n  }, [onSpringCancel, onSpringStart, onSpringEnd])\n\n  // Behold, the engine of it all!\n  const [spring, set] = useSpring()\n\n  const containerRef = useRef<HTMLDivElement>(null)\n  const scrollRef = useRef<HTMLDivElement>(null)\n  const contentRef = useRef<HTMLDivElement>(null)\n  const headerRef = useRef<HTMLDivElement>(null)\n  const footerRef = useRef<HTMLDivElement>(null)\n  const overlayRef = useRef<HTMLDivElement | null>(null)\n\n  // Keeps track of the current height, or the height transitioning to\n  const heightRef = useRef(0)\n  const resizeSourceRef = useRef<ResizeSource>()\n  const preventScrollingRef = useRef(false)\n\n  const prefersReducedMotion = useReducedMotion()\n\n  // \"Plugins\" huhuhu\n  const scrollLockRef = useScrollLock({\n    targetRef: scrollRef,\n    enabled: ready && scrollLocking,\n    reserveScrollBarGap,\n  })\n  const ariaHiderRef = useAriaHider({\n    targetRef: containerRef,\n    enabled: ready && blocking,\n  })\n  const focusTrapRef = useFocusTrap({\n    targetRef: containerRef,\n    fallbackRef: overlayRef,\n    initialFocusRef: initialFocusRef || undefined,\n    enabled: ready && blocking && initialFocusRef !== false,\n  })\n\n  const { minSnap, maxSnap, maxHeight, findSnap } = useSnapPoints({\n    contentRef,\n    controlledMaxHeight,\n    footerEnabled: !!footer,\n    footerRef,\n    getSnapPoints,\n    headerEnabled: header !== false,\n    headerRef,\n    heightRef,\n    lastSnapRef,\n    ready,\n    registerReady,\n    resizeSourceRef,\n  })\n\n  // Setup refs that are used in cases where full control is needed over when a side effect is executed\n  const maxHeightRef = useRef(maxHeight)\n  const minSnapRef = useRef(minSnap)\n  const maxSnapRef = useRef(maxSnap)\n  const findSnapRef = useRef(findSnap)\n  const defaultSnapRef = useRef(0)\n  // Sync the refs with current state, giving the spring full control over when to respond to changes\n  useLayoutEffect(() => {\n    maxHeightRef.current = maxHeight\n    maxSnapRef.current = maxSnap\n    minSnapRef.current = minSnap\n    findSnapRef.current = findSnap\n    defaultSnapRef.current = findSnap(getDefaultSnap)\n  }, [findSnap, getDefaultSnap, maxHeight, maxSnap, minSnap])\n\n  // New utility for using events safely\n  const asyncSet = useCallback<typeof set>(\n    // @ts-expect-error\n    ({ onRest, config: { velocity = 1, ...config } = {}, ...opts }) =>\n      new Promise((resolve) =>\n        set({\n          ...opts,\n          config: {\n            velocity,\n            ...config,\n            // @see https://springs.pomb.us\n            mass: 1,\n            // \"stiffness\"\n            tension,\n            // \"damping\"\n            friction: Math.max(\n              friction,\n              friction + (friction - friction * velocity)\n            ),\n          },\n          onRest: (...args) => {\n            resolve(...args)\n            onRest?.(...args)\n          },\n        })\n      ),\n    [set]\n  )\n  const [current, send] = useMachine(overlayMachine, {\n    devTools: debugging,\n    actions: {\n      onOpenCancel: useCallback(\n        () => onSpringCancelRef.current?.({ type: 'OPEN' }),\n        []\n      ),\n      onSnapCancel: useCallback(\n        (context) =>\n          onSpringCancelRef.current?.({\n            type: 'SNAP',\n            source: context.snapSource,\n          }),\n        []\n      ),\n      onCloseCancel: useCallback(\n        () => onSpringCancelRef.current?.({ type: 'CLOSE' }),\n        []\n      ),\n      onResizeCancel: useCallback(\n        () =>\n          onSpringCancelRef.current?.({\n            type: 'RESIZE',\n            source: resizeSourceRef.current,\n          }),\n        []\n      ),\n      onOpenEnd: useCallback(\n        () => onSpringEndRef.current?.({ type: 'OPEN' }),\n        []\n      ),\n      onSnapEnd: useCallback(\n        (context, event) =>\n          onSpringEndRef.current?.({\n            type: 'SNAP',\n            source: context.snapSource,\n          }),\n        []\n      ),\n      onResizeEnd: useCallback(\n        () =>\n          onSpringEndRef.current?.({\n            type: 'RESIZE',\n            source: resizeSourceRef.current,\n          }),\n        []\n      ),\n    },\n    context: { initialState },\n    services: {\n      onSnapStart: useCallback(\n        async (context, event) =>\n          onSpringStartRef.current?.({\n            type: 'SNAP',\n            source: event.payload.source || 'custom',\n          }),\n        []\n      ),\n      onOpenStart: useCallback(\n        async () => onSpringStartRef.current?.({ type: 'OPEN' }),\n        []\n      ),\n      onCloseStart: useCallback(\n        async () => onSpringStartRef.current?.({ type: 'CLOSE' }),\n        []\n      ),\n      onResizeStart: useCallback(\n        async () =>\n          onSpringStartRef.current?.({\n            type: 'RESIZE',\n            source: resizeSourceRef.current,\n          }),\n        []\n      ),\n      onSnapEnd: useCallback(\n        async (context, event) =>\n          onSpringEndRef.current?.({\n            type: 'SNAP',\n            source: context.snapSource,\n          }),\n        []\n      ),\n      onOpenEnd: useCallback(\n        async () => onSpringEndRef.current?.({ type: 'OPEN' }),\n        []\n      ),\n      onCloseEnd: useCallback(\n        async () => onSpringEndRef.current?.({ type: 'CLOSE' }),\n        []\n      ),\n      onResizeEnd: useCallback(\n        async () =>\n          onSpringEndRef.current?.({\n            type: 'RESIZE',\n            source: resizeSourceRef.current,\n          }),\n        []\n      ),\n      renderVisuallyHidden: useCallback(\n        async (context, event) => {\n          await asyncSet({\n            y: defaultSnapRef.current,\n            ready: 0,\n            maxHeight: maxHeightRef.current,\n            maxSnap: maxSnapRef.current,\n            // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\n            minSnap: defaultSnapRef.current,\n            immediate: true,\n          })\n        },\n        [asyncSet]\n      ),\n      activate: useCallback(\n        async (context, event) => {\n          canDragRef.current = true\n          await Promise.all([\n            scrollLockRef.current.activate(),\n            focusTrapRef.current.activate(),\n            ariaHiderRef.current.activate(),\n          ])\n        },\n        [ariaHiderRef, focusTrapRef, scrollLockRef]\n      ),\n      deactivate: useCallback(async () => {\n        scrollLockRef.current.deactivate()\n        focusTrapRef.current.deactivate()\n        ariaHiderRef.current.deactivate()\n        canDragRef.current = false\n      }, [ariaHiderRef, focusTrapRef, scrollLockRef]),\n      openImmediately: useCallback(async () => {\n        heightRef.current = defaultSnapRef.current\n        await asyncSet({\n          y: defaultSnapRef.current,\n          ready: 1,\n          maxHeight: maxHeightRef.current,\n          maxSnap: maxSnapRef.current,\n          // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\n          minSnap: defaultSnapRef.current,\n          immediate: true,\n        })\n      }, [asyncSet]),\n      openSmoothly: useCallback(async () => {\n        await asyncSet({\n          y: 0,\n          ready: 1,\n          maxHeight: maxHeightRef.current,\n          maxSnap: maxSnapRef.current,\n          // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\n          minSnap: defaultSnapRef.current,\n          immediate: true,\n        })\n\n        heightRef.current = defaultSnapRef.current\n\n        await asyncSet({\n          y: defaultSnapRef.current,\n          ready: 1,\n          maxHeight: maxHeightRef.current,\n          maxSnap: maxSnapRef.current,\n          // Using defaultSnapRef instead of minSnapRef to avoid animating `height` on open\n          minSnap: defaultSnapRef.current,\n          immediate: prefersReducedMotion.current,\n        })\n      }, [asyncSet, prefersReducedMotion]),\n      snapSmoothly: useCallback(\n        async (context, event) => {\n          const snap = findSnapRef.current(context.y)\n          heightRef.current = snap\n          lastSnapRef.current = snap\n          await asyncSet({\n            y: snap,\n            ready: 1,\n            maxHeight: maxHeightRef.current,\n            maxSnap: maxSnapRef.current,\n            minSnap: minSnapRef.current,\n            immediate: prefersReducedMotion.current,\n            config: { velocity: context.velocity },\n          })\n        },\n        [asyncSet, lastSnapRef, prefersReducedMotion]\n      ),\n      resizeSmoothly: useCallback(async () => {\n        const snap = findSnapRef.current(heightRef.current)\n        heightRef.current = snap\n        lastSnapRef.current = snap\n        await asyncSet({\n          y: snap,\n          ready: 1,\n          maxHeight: maxHeightRef.current,\n          maxSnap: maxSnapRef.current,\n          minSnap: minSnapRef.current,\n          immediate:\n            resizeSourceRef.current === 'element'\n              ? prefersReducedMotion.current\n              : true,\n        })\n      }, [asyncSet, lastSnapRef, prefersReducedMotion]),\n      closeSmoothly: useCallback(\n        async (context, event) => {\n          // Avoid animating the height property on close and stay within FLIP bounds by upping the minSnap\n          asyncSet({\n            minSnap: heightRef.current,\n            immediate: true,\n          })\n\n          heightRef.current = 0\n\n          await asyncSet({\n            y: 0,\n            maxHeight: maxHeightRef.current,\n            maxSnap: maxSnapRef.current,\n            immediate: prefersReducedMotion.current,\n          })\n\n          await asyncSet({ ready: 0, immediate: true })\n        },\n        [asyncSet, prefersReducedMotion]\n      ),\n    },\n  })\n\n  useEffect(() => {\n    if (!ready) return\n\n    if (_open) {\n      send('OPEN')\n    } else {\n      send('CLOSE')\n    }\n  }, [_open, send, ready])\n  useLayoutEffect(() => {\n    // Adjust the height whenever the snap points are changed due to resize events\n    if (maxHeight || maxSnap || minSnap) {\n      send('RESIZE')\n    }\n  }, [maxHeight, maxSnap, minSnap, send])\n  useEffect(\n    () => () => {\n      // Ensure effects are cleaned up on unmount, in case they're not cleaned up otherwise\n      scrollLockRef.current.deactivate()\n      focusTrapRef.current.deactivate()\n      ariaHiderRef.current.deactivate()\n    },\n    [ariaHiderRef, focusTrapRef, scrollLockRef]\n  )\n\n  useImperativeHandle(\n    forwardRef,\n    () => ({\n      snapTo: (numberOrCallback, { velocity = 1, source = 'custom' } = {}) => {\n        send('SNAP', {\n          payload: {\n            y: findSnapRef.current(numberOrCallback),\n            velocity,\n            source,\n          },\n        })\n      },\n      get height() {\n        return heightRef.current\n      },\n    }),\n    [send]\n  )\n\n  useEffect(() => {\n    const elem = scrollRef.current\n\n    const preventScrolling = e => {\n      if (preventScrollingRef.current) {\n        e.preventDefault()\n      }\n    }\n\n    const preventSafariOverscroll = e => {\n      if (elem.scrollTop < 0) {\n        requestAnimationFrame(() => {\n          elem.style.overflow = 'hidden'\n          elem.scrollTop = 0\n          elem.style.removeProperty('overflow')\n        })\n        e.preventDefault()\n      }\n    }\n\n    if (expandOnContentDrag) {\n      elem.addEventListener('scroll', preventScrolling)\n      elem.addEventListener('touchmove', preventScrolling)\n      elem.addEventListener('touchstart', preventSafariOverscroll)\n    }\n    return () => {\n      elem.removeEventListener('scroll', preventScrolling)\n      elem.removeEventListener('touchmove', preventScrolling)\n      elem.removeEventListener('touchstart', preventSafariOverscroll)\n    }\n  }, [expandOnContentDrag, scrollRef])\n\n  const handleDrag = ({\n    args: [{ closeOnTap = false, isContentDragging = false } = {}] = [],\n    cancel,\n    direction: [, direction],\n    down,\n    first,\n    last,\n    memo = spring.y.getValue() as number,\n    movement: [, _my],\n    tap,\n    velocity,\n  }) => {\n    const my = _my * -1\n\n    // Cancel the drag operation if the canDrag state changed\n    if (!canDragRef.current) {\n      console.log('handleDrag cancelled dragging because canDragRef is false')\n      cancel()\n      return memo\n    }\n\n    if (onDismiss && closeOnTap && tap) {\n      cancel()\n      // Runs onDismiss in a timeout to avoid tap events on the backdrop from triggering click events on elements underneath\n      setTimeout(() => onDismiss(), 0)\n      return memo\n    }\n\n    // Filter out taps\n    if (tap) {\n      return memo\n    }\n\n    const rawY = memo + my\n    const predictedDistance = my * velocity\n    const predictedY = Math.max(\n      minSnapRef.current,\n      Math.min(maxSnapRef.current, rawY + predictedDistance * 2)\n    )\n\n    if (\n      !down &&\n      onDismiss &&\n      direction > 0 &&\n      rawY + predictedDistance < minSnapRef.current / 2\n    ) {\n      cancel()\n      onDismiss()\n      return memo\n    }\n\n    let newY = down\n      ? // @TODO figure out a better way to deal with rubberband overshooting if min and max have the same value\n        !onDismiss && minSnapRef.current === maxSnapRef.current\n        ? rawY < minSnapRef.current\n          ? rubberbandIfOutOfBounds(\n              rawY,\n              minSnapRef.current,\n              maxSnapRef.current * 2,\n              0.55\n            )\n          : rubberbandIfOutOfBounds(\n              rawY,\n              minSnapRef.current / 2,\n              maxSnapRef.current,\n              0.55\n            )\n        : rubberbandIfOutOfBounds(\n            rawY,\n            onDismiss ? 0 : minSnapRef.current,\n            maxSnapRef.current,\n            0.55\n          )\n      : predictedY\n\n    if (expandOnContentDrag && isContentDragging) {\n      if (newY >= maxSnapRef.current) {\n        newY = maxSnapRef.current\n      }\n\n      if (memo === maxSnapRef.current && scrollRef.current.scrollTop > 0) {\n        newY = maxSnapRef.current\n      }\n\n      preventScrollingRef.current = newY < maxSnapRef.current;\n    } else {\n      preventScrollingRef.current = false\n    }\n\n    if (first) {\n      send('DRAG')\n    }\n\n    if (last) {\n      send('SNAP', {\n        payload: {\n          y: newY,\n          velocity: velocity > 0.05 ? velocity : 1,\n          source: 'dragging',\n        },\n      })\n\n      return memo\n    }\n\n    // @TODO too many rerenders\n    //send('DRAG', { y: newY, velocity })\n    //*\n    set({\n      y: newY,\n      ready: 1,\n      maxHeight: maxHeightRef.current,\n      maxSnap: maxSnapRef.current,\n      minSnap: minSnapRef.current,\n      immediate: true,\n      config: { velocity },\n    })\n    // */\n\n    return memo\n  }\n\n  const bind = useDrag(handleDrag, {\n    filterTaps: true,\n  })\n\n  if (Number.isNaN(maxSnapRef.current)) {\n    throw new TypeError('maxSnapRef is NaN!!')\n  }\n  if (Number.isNaN(minSnapRef.current)) {\n    throw new TypeError('minSnapRef is NaN!!')\n  }\n\n  const interpolations = useSpringInterpolations({ spring })\n\n  return (\n    <animated.div\n      {...props}\n      data-rsbs-root\n      data-rsbs-state={publicStates.find(current.matches)}\n      data-rsbs-is-blocking={blocking}\n      data-rsbs-is-dismissable={!!onDismiss}\n      data-rsbs-has-header={!!header}\n      data-rsbs-has-footer={!!footer}\n      className={className}\n      ref={containerRef}\n      style={{\n        // spread in the interpolations yeees\n        ...interpolations,\n        // but allow overriding them/disabling them\n        ...style,\n        // Not overridable as the \"focus lock with opacity 0\" trick rely on it\n        // @TODO the line below only fails on TS <4\n        // @ts-ignore\n        opacity: spring.ready,\n      }}\n    >\n      {sibling}\n      {blocking && (\n        <div\n          // This component needs to be placed outside bottom-sheet, as bottom-sheet uses transform and thus creates a new context\n          // that clips this element to the container, not allowing it to cover the full page.\n          key=\"backdrop\"\n          data-rsbs-backdrop\n          {...bind({ closeOnTap: true })}\n        />\n      )}\n      <div\n        key=\"overlay\"\n        aria-modal=\"true\"\n        role=\"dialog\"\n        data-rsbs-overlay\n        tabIndex={-1}\n        ref={overlayRef}\n        onKeyDown={(event) => {\n          if (event.key === 'Escape') {\n            // Always stop propagation, to avoid weirdness for bottom sheets inside other bottom sheets\n            event.stopPropagation()\n            if (onDismiss) onDismiss()\n          }\n        }}\n      >\n        {header !== false && (\n          <div key=\"header\" data-rsbs-header ref={headerRef} {...bind()}>\n            {header}\n          </div>\n        )}\n        <div key=\"scroll\" data-rsbs-scroll ref={scrollRef} {...(expandOnContentDrag ? bind({ isContentDragging: true }) : {})}>\n          <div data-rsbs-content ref={contentRef}>\n            {children}\n          </div>\n        </div>\n        {footer && (\n          <div key=\"footer\" ref={footerRef} data-rsbs-footer {...bind()}>\n            {footer}\n          </div>\n        )}\n      </div>\n    </animated.div>\n  )\n})\n\n// Used for the data attribute, list over states available to CSS selectors\nconst publicStates = [\n  'closed',\n  'opening',\n  'open',\n  'closing',\n  'dragging',\n  'snapping',\n  'resizing',\n]\n\n// Default prop values that are callbacks, and it's nice to save some memory and reuse their instances since they're pure\nfunction _defaultSnap({ snapPoints, lastSnap }: defaultSnapProps) {\n  return lastSnap ?? Math.min(...snapPoints)\n}\nfunction _snapPoints({ minHeight }: SnapPointProps) {\n  return minHeight\n}\n","// Keeps track of wether everything is good to go or not, in the most efficient way possible\n\nimport { useCallback, useEffect, useState } from 'react'\n\nexport function useReady() {\n  const [ready, setReady] = useState(false)\n  const [readyMap, updateReadyMap] = useState<{ [key: string]: boolean }>({})\n\n  const registerReady = useCallback((key: string) => {\n    console.count(`registerReady:${key}`)\n    // Register the check we're gonna wait for until it's ready\n    updateReadyMap((ready) => ({ ...ready, [key]: false }))\n\n    return () => {\n      console.count(`setReady:${key}`)\n      // Set it to ready\n      updateReadyMap((ready) => ({ ...ready, [key]: true }))\n    }\n  }, [])\n\n  useEffect(() => {\n    const states = Object.values(readyMap)\n\n    if (states.length === 0) {\n      console.log('nope nothing registered yet')\n      return\n    }\n\n    const isReady = states.every(Boolean)\n    console.log('check if we are rready', readyMap, isReady)\n    if (isReady) {\n      console.warn('ready!')\n      setReady(true)\n    }\n  }, [readyMap])\n\n  return { ready, registerReady }\n}\n","import { useDebugValue, useEffect, useMemo, useRef } from 'react'\n\n// @TODO refactor to addEventListener\nexport function useReducedMotion() {\n  const mql = useMemo(\n    () =>\n      typeof window !== 'undefined'\n        ? window.matchMedia('(prefers-reduced-motion: reduce)')\n        : null,\n    []\n  )\n  const ref = useRef(mql?.matches)\n\n  useDebugValue(ref.current ? 'reduce' : 'no-preference')\n\n  useEffect(() => {\n    const handler = (event) => {\n      ref.current = event.matches\n    }\n    mql?.addListener(handler)\n\n    return () => mql?.removeListener(handler)\n  }, [mql])\n\n  return ref\n}\n","import { useSpring as useReactSpring } from 'react-spring'\n\n// Behold, the engine of it all!\n// Put in this file befause it makes it easier to type and I'm lazy! :D\n\nexport function useSpring() {\n  return useReactSpring(() => ({\n    y: 0,\n    ready: 0,\n    maxHeight: 0,\n    minSnap: 0,\n    maxSnap: 0,\n  }))\n}\n\nexport type Spring = ReturnType<typeof useSpring>[0]\nexport type SpringSet = ReturnType<typeof useSpring>[1]\n","import { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock'\nimport { useDebugValue, useEffect, useRef } from 'react'\n\n/**\n * Handle scroll locking to ensure a good dragging experience on Android and iOS.\n *\n * On iOS the following may happen if scroll isn't locked:\n * - When dragging the sheet the background gets dragged at the same time.\n * - When dragging the page scroll is also affected, causing the drag to feel buggy and \"slow\".\n *\n * On Android it causes the chrome toolbar to pop down as you drag down, and hide as you drag up.\n * When it's in between two toolbar states it causes the framerate to drop way below 60fps on\n * the bottom sheet drag interaction.\n */\nexport function useScrollLock({\n  targetRef,\n  enabled,\n  reserveScrollBarGap,\n}: {\n  targetRef: React.RefObject<Element>\n  enabled: boolean\n  reserveScrollBarGap: boolean\n}) {\n  const ref = useRef<{ activate: () => void; deactivate: () => void }>({\n    activate: () => {\n      throw new TypeError('Tried to activate scroll lock too early')\n    },\n    deactivate: () => {},\n  })\n\n  useDebugValue(enabled ? 'Enabled' : 'Disabled')\n\n  useEffect(() => {\n    if (!enabled) {\n      ref.current.deactivate()\n      ref.current = { activate: () => {}, deactivate: () => {} }\n      return\n    }\n\n    const target = targetRef.current\n    let active = false\n\n    ref.current = {\n      activate: () => {\n        if (active) return\n        active = true\n        disableBodyScroll(target, {\n          allowTouchMove: (el) => el.closest('[data-body-scroll-lock-ignore]'),\n          reserveScrollBarGap,\n        })\n      },\n      deactivate: () => {\n        if (!active) return\n        active = false\n        enableBodyScroll(target)\n      },\n    }\n  }, [enabled, targetRef, reserveScrollBarGap])\n\n  return ref\n}\n","import React, { useDebugValue, useEffect, useRef } from 'react'\n\n// Handle hiding and restoring aria-hidden attributes\nexport function useAriaHider({\n  targetRef,\n  enabled,\n}: {\n  targetRef: React.RefObject<Element>\n  enabled: boolean\n}) {\n  const ref = useRef<{ activate: () => void; deactivate: () => void }>({\n    activate: () => {\n      throw new TypeError('Tried to activate aria hider too early')\n    },\n    deactivate: () => {},\n  })\n\n  useDebugValue(enabled ? 'Enabled' : 'Disabled')\n\n  useEffect(() => {\n    if (!enabled) {\n      ref.current.deactivate()\n      ref.current = { activate: () => {}, deactivate: () => {} }\n      return\n    }\n\n    const target = targetRef.current\n    let active = false\n    let originalValues: (null | string)[] = []\n    let rootNodes: Element[] = []\n\n    ref.current = {\n      activate: () => {\n        if (active) return\n        active = true\n\n        const parentNode = target.parentNode\n\n        document.querySelectorAll('body > *').forEach((node) => {\n          if (node === parentNode) {\n            return\n          }\n          let attr = node.getAttribute('aria-hidden')\n          let alreadyHidden = attr !== null && attr !== 'false'\n          if (alreadyHidden) {\n            return\n          }\n          originalValues.push(attr)\n          rootNodes.push(node)\n          node.setAttribute('aria-hidden', 'true')\n        })\n      },\n      deactivate: () => {\n        if (!active) return\n        active = false\n\n        rootNodes.forEach((node, index) => {\n          let originalValue = originalValues[index]\n          if (originalValue === null) {\n            node.removeAttribute('aria-hidden')\n          } else {\n            node.setAttribute('aria-hidden', originalValue)\n          }\n        })\n        originalValues = []\n        rootNodes = []\n      },\n    }\n  }, [targetRef, enabled])\n\n  return ref\n}\n","import { createFocusTrap } from 'focus-trap'\nimport { useDebugValue, useEffect, useRef } from 'react'\n\nexport function useFocusTrap({\n  targetRef,\n  fallbackRef,\n  initialFocusRef,\n  enabled,\n}: {\n  targetRef: React.RefObject<HTMLElement>\n  fallbackRef: React.RefObject<HTMLElement>\n  initialFocusRef?: React.RefObject<HTMLElement>\n  enabled: boolean\n}) {\n  const ref = useRef<{ activate: () => void; deactivate: () => void }>({\n    activate: () => {\n      throw new TypeError('Tried to activate focus trap too early')\n    },\n    deactivate: () => {},\n  })\n\n  useDebugValue(enabled ? 'Enabled' : 'Disabled')\n\n  useEffect(() => {\n    if (!enabled) {\n      ref.current.deactivate()\n      ref.current = { activate: () => {}, deactivate: () => {} }\n      return\n    }\n\n    const fallback = fallbackRef.current\n    const trap = createFocusTrap(targetRef.current, {\n      onActivate:\n        process.env.NODE_ENV !== 'production'\n          ? () => {\n              console.log('focus activate')\n            }\n          : undefined,\n      // If initialFocusRef is manually specified we don't want the first tabbable element to receive focus if initialFocusRef can't be found\n      initialFocus: initialFocusRef\n        ? () => initialFocusRef?.current || fallback\n        : undefined,\n      fallbackFocus: fallback,\n      escapeDeactivates: false,\n      clickOutsideDeactivates: false,\n    })\n    let active = false\n\n    ref.current = {\n      activate: async () => {\n        if (active) return\n        active = true\n\n        await trap.activate()\n        // it's difficult to know exactly when focus is udpated https://github.com/focus-trap/focus-trap/blob/036a72ec48b85414dda00ec0c40d631c8f0ae5ce/index.js#L369-L371\n        // This timeout is attempting to compromise between a reasonable guess, as well as not delaying the open transition more than necessary\n        await new Promise((resolve) => setTimeout(() => resolve(void 1), 0))\n      },\n      deactivate: () => {\n        if (!active) return\n        active = false\n\n        trap.deactivate()\n      },\n    }\n  }, [enabled, fallbackRef, initialFocusRef, targetRef])\n\n  return ref\n}\n","import { interpolate } from 'react-spring'\nimport type { Spring } from './useSpring'\nimport { clamp } from '../utils'\n\n// It's a bit easier to ensure interpolations don't accidentally use the wrong variables by\n// putting them here, in their own closure with explicitly defined variables used\n\n// Note that the callbacks in the interpolation functions close over their scope every time react renders\n// so it's important that if anything can change outside of render that needs to be available\n// in the interpolation then a ref must be used\n\nexport function useSpringInterpolations({\n  spring,\n}: {\n  spring: Spring\n}): React.CSSProperties {\n  // This effect is for removing rounded corners on phones when the sheet touches the top of the browser chrome\n  // as it's really ugly with the gaps border radius creates. This ensures it looks sleek.\n  // @TODO the ts-ignore comments are because the `extrapolate` param isn't in the TS defs for some reason\n  const interpolateBorderRadius = interpolate(\n    // @ts-expect-error\n    [spring.y, spring.maxHeight],\n    (y, maxHeight) => {\n      return `${Math.round(clamp(maxHeight - y, 0, 16))}px`\n    }\n  )\n\n  /*\n   * Only animate the height when absolute necessary\n   * @TODO currently it's only able to opt out of changing the height if there's just a single snapshot\n   *       but it should be possible to do it in other scenarios too, like on window resize,\n   *       or maybe even while dragging, but probably requires a more restrictive CSS.\n   *       As in now the sticky footer isn't overlapping the content, allowing `backdrop-filter: blur(8px)` effects.\n   *       A FLIP resize flow for content height would likely require the sticky elements to overlap the content area.\n   *       Could be done as a separat mode though, or a separate example CSS for max performance.\n   */\n  const interpolateHeight = interpolate(\n    // @ts-ignore\n    [spring.y, spring.minSnap, spring.maxSnap],\n    (y, minSnap, maxSnap) => `${clamp(y, minSnap, maxSnap)}px`\n  )\n\n  const interpolateY = interpolate(\n    // @ts-ignore\n    [spring.y, spring.minSnap, spring.maxSnap],\n    (y, minSnap, maxSnap) => {\n      if (y < minSnap) {\n        return `${minSnap - y}px`\n      }\n      if (y > maxSnap) {\n        return `${maxSnap - y}px`\n      }\n      return '0px'\n    }\n  )\n\n  const interpolateFiller = interpolate(\n    // @ts-ignore\n    [spring.y, spring.maxSnap],\n    (y, maxSnap) => {\n      if (y >= maxSnap) {\n        return Math.ceil(y - maxSnap)\n      }\n      return 0\n    }\n  )\n\n  const interpolateContentOpacity = interpolate(\n    // @ts-ignore\n    [spring.y, spring.minSnap],\n    (y, minSnap) => {\n      if (!minSnap) {\n        return 0\n      }\n      const minX = Math.max(minSnap / 2 - 45, 0)\n      const maxX = Math.min(minSnap / 2 + 45, minSnap)\n      const minY = 0\n      const maxY = 1\n\n      const slope = (maxY - minY) / (maxX - minX)\n      const res = (y - minX) * (slope + minY)\n      return clamp(res, 0, 1)\n    }\n  )\n\n  const interpolateBackdrop = interpolate(\n    // @ts-ignore\n    [spring.y, spring.minSnap],\n    (y, minSnap) => (minSnap ? clamp(y / minSnap, 0, 1) : 0)\n  )\n\n  return {\n    // Fancy content fade-in effect\n    ['--rsbs-content-opacity' as any]: interpolateContentOpacity,\n    // Fading in the backdrop\n    ['--rsbs-backdrop-opacity' as any]: interpolateBackdrop,\n    // Scaling the antigap in the bottom\n    ['--rsbs-antigap-scale-y' as any]: interpolateFiller,\n    // Shifts the position of the bottom sheet, used on open and close primarily as snap point changes usually only interpolate the height\n    ['--rsbs-overlay-translate-y' as any]: interpolateY,\n    // Remove rounded borders when full height, it looks much better this way\n    ['--rsbs-overlay-rounded' as any]: interpolateBorderRadius,\n    // Animates the height state, not the most performant way but it's the safest with regards to mobile browser and focus/scrolling that could happen while animating\n    ['--rsbs-overlay-h' as any]: interpolateHeight,\n  }\n}\n","/* eslint-disable react/jsx-pascal-case */\nimport Portal from '@reach/portal'\nimport React, { forwardRef, useRef, useState, useCallback } from 'react'\nimport { BottomSheet as _BottomSheet } from './BottomSheet'\nimport type { Props, RefHandles, SpringEvent, PortalProps } from './types'\nimport { useLayoutEffect } from './hooks'\n\nexport type {\n  RefHandles as BottomSheetRef,\n  Props as BottomSheetProps,\n} from './types'\n\n// Because SSR is annoying to deal with, and all the million complaints about window, navigator and dom elenents!\nexport const BottomSheet = forwardRef<RefHandles, Props & PortalProps>(\n  function BottomSheet(\n    {\n      onSpringStart,\n      onSpringEnd,\n      skipInitialTransition,\n      containerRef,\n      ...props\n    },\n    ref\n  ) {\n    // Mounted state, helps SSR but also ensures you can't tab into the sheet while it's closed, or nav there in a screen reader\n    const [mounted, setMounted] = useState(false)\n    const timerRef = useRef<ReturnType<typeof requestAnimationFrame>>()\n    // The last point that the user snapped to, useful for open/closed toggling and the user defined height is remembered\n    const lastSnapRef = useRef(null)\n    // @TODO refactor to an initialState: OPEN | CLOSED property as it's much easier to understand\n    // And informs what we should animate from. If the sheet is mounted with open = true, then initialState = OPEN.\n    // When initialState = CLOSED, then internal sheet must first render with open={false} before setting open={props.open}\n    // It's only when initialState and props.open is mismatching that a intial transition should happen\n    // If they match then transitions will only happen when a user interaction or resize event happen.\n    const initialStateRef = useRef<'OPEN' | 'CLOSED'>(\n      skipInitialTransition && props.open ? 'OPEN' : 'CLOSED'\n    )\n\n    // Using layout effect to support cases where the bottom sheet have to appear already open, no transition\n    useLayoutEffect(() => {\n      if (props.open) {\n        cancelAnimationFrame(timerRef.current)\n        setMounted(true)\n\n        // Cleanup defaultOpen state on close\n        return () => {\n          initialStateRef.current = 'CLOSED'\n        }\n      }\n    }, [props.open])\n\n    const handleSpringStart = useCallback(\n      async function handleSpringStart(event: SpringEvent) {\n        // Forward the event\n        await onSpringStart?.(event)\n\n        if (event.type === 'OPEN') {\n          // Ensures that when it's opening we abort any pending unmount action\n          cancelAnimationFrame(timerRef.current)\n        }\n      },\n      [onSpringStart]\n    )\n\n    const handleSpringEnd = useCallback(\n      async function handleSpringEnd(event: SpringEvent) {\n        // Forward the event\n        await onSpringEnd?.(event)\n\n        if (event.type === 'CLOSE') {\n          // Unmount from the dom to avoid contents being tabbable or visible to screen readers while closed\n          timerRef.current = requestAnimationFrame(() => setMounted(false))\n        }\n      },\n      [onSpringEnd]\n    )\n\n    // This isn't just a performance optimization, it's also to avoid issues when running a non-browser env like SSR\n    if (!mounted) {\n      return null\n    }\n\n    return (\n      <Portal containerRef={containerRef} data-rsbs-portal>\n        {props.showGlobalBackdrop && (\n          <div data-rsbs-global-backdrop onClick={props.onClickBackdrop} />\n        )}\n        <_BottomSheet\n          {...props}\n          lastSnapRef={lastSnapRef}\n          ref={ref}\n          initialState={initialStateRef.current}\n          onSpringStart={handleSpringStart}\n          onSpringEnd={handleSpringEnd}\n        />\n      </Portal>\n    )\n  }\n)\n"],"names":["useLayoutEffect","window","useLayoutEffectSafely","useEffect","clamp","number","lower","upper","unrounded","rounded","Math","round","Number","isNaN","TypeError","observerOptions","box","ref","_ref3","label","enabled","resizeSourceRef","useState","size","setSize","_useState","useDebugValue","handleResize","useCallback","entries","borderBoxSize","blockSize","current","resizeObserver","ResizeObserver","observe","disconnect","sleep","ms","Promise","resolve","setTimeout","openToDrag","DRAG","target","actions","openToResize","RESIZE","overlayMachine","Machine","id","initial","context","initialState","states","closed","on","OPEN","CLOSE","undefined","opening","start","invoke","src","onDone","transition","always","cond","immediately","open","activating","smoothly","visuallyHidden","end","done","type","cancelOpen","SNAP","dragging","snapping","entry","assign","y","_","payload","velocity","_ref4","snapSource","_ref5","_ref5$payload$source","source","snappingSmoothly","resizing","resizingSmoothly","closing","deactivating","closingSmoothly","onOpenCancel","event","onSnapCancel","onResizeCancel","onCloseCancel","onOpenEnd","onSnapEnd","onRezizeEnd","services","onSnapStart","then","onOpenStart","e","reject","onCloseStart","onResizeStart","onCloseEnd","onResizeEnd","renderVisuallyHidden","activate","deactivate","openSmoothly","openImmediately","snapSmoothly","resizeSmoothly","closeSmoothly","guards","initiallyClosed","initiallyOpen","_excluded","_excluded2","_excluded3","config","default","tension","friction","_config$default","BottomSheet","React","forwardRef","_ref","children","sibling","className","footer","header","_open","lastSnapRef","initialFocusRef","onDismiss","controlledMaxHeight","maxHeight","defaultSnap","getDefaultSnap","_ref$defaultSnap","_defaultSnap","_ref$snapPoints","snapPoints","getSnapPoints","_snapPoints","_ref$blocking","blocking","scrollLocking","_ref$scrollLocking","style","onSpringStart","onSpringCancel","onSpringEnd","reserveScrollBarGap","_ref$reserveScrollBar","expandOnContentDrag","_ref$expandOnContentD","props","_objectWithoutPropertiesLoose","_useReady","ready","setReady","_useState2","readyMap","updateReadyMap","registerReady","key","_extends2","_extends3","Object","values","length","every","Boolean","useReady","canDragRef","useRef","onSpringStartRef","onSpringCancelRef","onSpringEndRef","mql","useReactSpring","useSpring","minSnap","maxSnap","spring","set","_useSpring","containerRef","scrollRef","contentRef","heightRef","prefersReducedMotion","useMemo","matchMedia","matches","handler","addListener","removeListener","scrollLockRef","useScrollLock","targetRef","active","disableBodyScroll","allowTouchMove","el","closest","enableBodyScroll","ariaHiderRef","useAriaHider","originalValues","rootNodes","parentNode","document","querySelectorAll","forEach","node","attr","getAttribute","push","setAttribute","index","originalValue","removeAttribute","fallbackRef","fallback","trap","createFocusTrap","onActivate","initialFocus","fallbackFocus","escapeDeactivates","clickOutsideDeactivates","useFocusTrap","overlayRef","_useSnapPoints","_useDimensions","_ref2","footerEnabled","footerRef","headerEnabled","headerRef","roundAndCheckForNaN","innerHeight","setMaxHeight","raf","requestAnimationFrame","addEventListener","removeEventListener","cancelAnimationFrame","useMaxHeight","headerHeight","useElementSizeObserver","footerHeight","minHeight","min","contentHeight","useDimensions","processSnapPoints","unsafeSnaps","snapPointsDedupedSet","concat","map","reduce","acc","snapPoint","add","Set","Array","from","max","height","_processSnapPoints","findSnap","numberOrCallback","querySnap","lastSnap","prev","curr","abs","useSnapPoints","maxHeightRef","minSnapRef","maxSnapRef","findSnapRef","defaultSnapRef","asyncSet","_onRest","onRest","_ref2$config$velocity","opts","mass","args","slice","call","arguments","useMachine","devTools","immediate","all","focusTrapRef","snap","send","useImperativeHandle","snapTo","_temp","_ref3$velocity","_ref3$source","elem","preventScrollingRef","preventDefault","scrollTop","overflow","removeProperty","preventScrolling","preventSafariOverscroll","bind","useDrag","_ref4$args","closeOnTap","_ref4$args$$closeOnTa","isContentDragging","_ref4$args$$isContent","cancel","direction","down","first","last","_ref4$memo","memo","getValue","tap","my","movement","rawY","predictedDistance","predictedY","newY","rubberbandIfOutOfBounds","filterTaps","useSpringInterpolations","interpolateBorderRadius","interpolate","interpolateHeight","interpolateY","ceil","interpolateContentOpacity","minX","interpolateBackdrop","interpolateFiller","createElement","animated","div","_extends","publicStates","find","interpolations","opacity","role","tabIndex","onKeyDown","stopPropagation","skipInitialTransition","mounted","setMounted","timerRef","initialStateRef","handleSpringStart","handleSpringEnd","Portal","showGlobalBackdrop","onClick","onClickBackdrop","_BottomSheet"],"mappings":"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"}